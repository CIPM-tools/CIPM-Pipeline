@Ecore(nsPrefix="hcl", nsURI="http://www.example.com/Example")
@GenModel(
    bundleManifest = "false",
    modelDirectory = "src/main/java-gen",
    complianceLevel = "8.0"
)

package dmodel.pipeline.dt.callgraph

import org.palladiosimulator.pcm.seff.ResourceDemandingSEFF

class ServiceCallGraph {
	refers ResourceDemandingSEFF[] nodes
	contains ServiceCallGraphEdge[] edges
	
	// for faster access
	contains EdgeList[] outgoingEdges
	contains EdgeList[] incomingEdges
	
	op void addNode(ResourceDemandingSEFF service) {
		nodes.add(service)
	}
	
	op void addEdge(ResourceDemandingSEFF from, ResourceDemandingSEFF to, int value) {
		var edge = CallgraphFactory.eINSTANCE.createServiceCallGraphEdge
		edge.from = from
		edge.to = to
		edge.value = value
		
		edges.add(edge)
		
		if (outgoingEdges.containsKey(from.id)) {
			outgoingEdges.put(from.id, newBasicEList())
		}
		outgoingEdges.get(from.id).add(edge)
		
		if (incomingEdges.containsKey(to.id)) {
			incomingEdges.put(to.id, newBasicEList())
		}
		incomingEdges.get(to.id).add(edge)
	}
}

class ServiceCallGraphEdge {
	refers ResourceDemandingSEFF from
	refers ResourceDemandingSEFF to
	
	int value
}

class EdgeList wraps java.util.Map$Entry {
    String key
    refers ServiceCallGraphEdge[] value
}