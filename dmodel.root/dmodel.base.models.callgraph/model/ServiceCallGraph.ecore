<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ServiceCallGraph" nsURI="http://www.dmodel.com/CallGraph" nsPrefix="scg">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="bundleManifest" value="false"/>
    <details key="modelDirectory" value="dmodel.pipeline.dt.callgraph/src-gen/java"/>
    <details key="complianceLevel" value="8.0"/>
    <details key="basePackage" value="dmodel.pipeline.dt.callgraph"/>
    <details key="modelPluginID" value=""/>
    <details key="updateClasspath" value="false"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="ServiceCallGraph">
    <eOperations name="addNode" eType="#//ServiceCallGraphNode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="ServiceCallGraphNode node = ServiceCallGraphFactory.eINSTANCE.createServiceCallGraphNode();&#xA;node.setHost(host);&#xA;node.setSeff(seff);&#xA;getNodes().add(node);&#xA;getIncomingEdges().put(node, new BasicEList&lt;ServiceCallGraphEdge>());&#xA;getOutgoingEdges().put(node, new BasicEList&lt;ServiceCallGraphEdge>());&#xA;&#xA;return node;"/>
      </eAnnotations>
      <eParameters name="seff" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="host" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
    </eOperations>
    <eOperations name="addEdge">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="// nodes&#xA;ServiceCallGraphNode fromNode = hasNode(from, fromContainer);&#xA;if (fromNode == null) {&#xA;&#x9;fromNode = this.addNode(from, fromContainer);&#xA;}&#xA;ServiceCallGraphNode toNode = hasNode(to, toContainer);&#xA;if (toNode == null) {&#xA;&#x9;toNode = this.addNode(to, toContainer);&#xA;}&#xA;// edge&#xA;ServiceCallGraphEdge edge = ServiceCallGraphFactory.eINSTANCE.createServiceCallGraphEdge();&#xA;edge.setFrom(fromNode);&#xA;edge.setTo(toNode);&#xA;edge.setValue(value);&#xA;edge.setExternalCall(externalCall);&#xA;&#xA;if (!getOutgoingEdges().containsKey(fromNode)) {&#xA;&#x9;getOutgoingEdges().put(fromNode, new BasicEList&lt;ServiceCallGraphEdge>());&#xA;}&#xA;getOutgoingEdges().get(fromNode).add(edge);&#xA;&#xA;if (!getIncomingEdges().containsKey(toNode)) {&#xA;&#x9;getIncomingEdges().put(toNode, new BasicEList&lt;ServiceCallGraphEdge>());&#xA;}&#xA;getIncomingEdges().get(toNode).add(edge);&#xA;&#xA;// add globally&#xA;getEdges().add(edge);"/>
      </eAnnotations>
      <eParameters name="from" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="to" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="fromContainer" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
      <eParameters name="toContainer" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
      <eParameters name="externalCall" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ExternalCallAction"/>
      <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    </eOperations>
    <eOperations name="incrementEdge">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="ServiceCallGraphEdge edge = this.hasEdge(from, to, fromContainer, toContainer, externalCall);&#xA;if (edge != null) {&#xA;&#x9;edge.setValue(edge.getValue() + 1);&#xA;} else {&#xA;&#x9;this.addEdge(from, to, fromContainer, toContainer, externalCall, 1);&#xA;}"/>
      </eAnnotations>
      <eParameters name="from" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="to" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="fromContainer" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
      <eParameters name="toContainer" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
      <eParameters name="externalCall" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ExternalCallAction"/>
    </eOperations>
    <eOperations name="hasEdge" eType="#//ServiceCallGraphEdge">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getEdges().stream().filter(edge -> {&#xA;&#x9;return (nodeEqual(from, fromContainer, edge.getFrom().getSeff(), edge.getFrom().getHost()))&#xA;&#x9;&#x9;&#x9;&amp;&amp; (nodeEqual(to, toContainer, edge.getTo().getSeff(), edge.getTo().getHost()))&#xA;&#x9;&#x9;&#x9;&amp;&amp; edge.getExternalCall().equals(externalCall);&#xA;}).findFirst().orElse(null);"/>
      </eAnnotations>
      <eParameters name="from" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="to" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="fromContainer" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
      <eParameters name="toContainer" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
      <eParameters name="externalCall" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ExternalCallAction"/>
    </eOperations>
    <eOperations name="hasNode" eType="#//ServiceCallGraphNode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getNodes().stream()&#xA;&#x9;&#x9;.filter(n -> nodeEqual(node, host, n.getSeff(), n.getHost()))&#xA;&#x9;&#x9;.findFirst().orElse(null);"/>
      </eAnnotations>
      <eParameters name="node" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="host" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
    </eOperations>
    <eOperations name="nodeEqual" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean nullEqual1 = node == null &amp;&amp; node2 == null;&#xA;boolean nullEqual2 = host == null &amp;&amp; host2 == null;&#xA;&#xA;boolean anyNull1 = node == null || node2 == null;&#xA;boolean anyNull2 = host == null || host2 == null;&#xA;&#xA;if (nullEqual1 &amp;&amp; nullEqual2) {&#xA;&#x9;return true;&#xA;} else if (nullEqual2 &amp;&amp; !anyNull1) {&#xA;&#x9;return node.getId().equals(node2.getId());&#xA;} else if (nullEqual1 &amp;&amp; !anyNull2) {&#xA;&#x9;return host.getId().equals(host2.getId());&#xA;} else if (anyNull1 || anyNull2) {&#xA;&#x9;return false;&#xA;} else {&#xA;&#x9;return node.getId().equals(node2.getId()) &amp;&amp; host.getId().equals(host2.getId());&#xA;}"/>
      </eAnnotations>
      <eParameters name="node" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="host" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
      <eParameters name="node2" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
      <eParameters name="host2" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
    </eOperations>
    <eOperations name="removeEdge">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="// remove from all sub lists&#xA;getOutgoingEdges().get(edge.getFrom()).remove(edge);&#xA;getIncomingEdges().get(edge.getTo()).remove(edge);&#xA;&#xA;// remove from global list&#xA;getEdges().remove(edge);"/>
      </eAnnotations>
      <eParameters name="edge" eType="#//ServiceCallGraphEdge"/>
    </eOperations>
    <eOperations name="rebuild">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="getIncomingEdges().clear();&#xA;getOutgoingEdges().clear();&#xA;&#xA;for (ServiceCallGraphNode node : getNodes()) {&#xA;&#x9;getOutgoingEdges().put(node, new BasicEList&lt;ServiceCallGraphEdge>());&#xA;&#x9;getIncomingEdges().put(node, new BasicEList&lt;ServiceCallGraphEdge>());&#xA;}&#xA;&#xA;for (ServiceCallGraphEdge edge : getEdges()) {&#xA;&#x9;getOutgoingEdges().get(edge.getFrom()).add(edge);&#xA;&#x9;getIncomingEdges().get(edge.getTo()).add(edge);&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="removeNode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (getIncomingEdges().get(node).size() == 0 &amp;&amp; getOutgoingEdges().get(node).size() == 0) {&#xA;&#x9;getNodes().remove(node);&#xA;} else {&#xA;&#x9;throw new IllegalStateException(&#xA;&#x9;&#x9;&#x9;&quot;There are existing edges for a node that should be removed. Please remove the edges in advance to be able to remove the node.&quot;);&#xA;}"/>
      </eAnnotations>
      <eParameters name="node" eType="#//ServiceCallGraphNode"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="nodes" upperBound="-1"
        eType="#//ServiceCallGraphNode" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="edges" upperBound="-1"
        eType="#//ServiceCallGraphEdge" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingEdges" upperBound="-1"
        eType="#//EdgeList" transient="true" containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="incomingEdges" upperBound="-1"
        eType="#//EdgeList" transient="true" containment="true" resolveProxies="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ServiceCallGraphEdge">
    <eStructuralFeatures xsi:type="ecore:EReference" name="from" eType="#//ServiceCallGraphNode"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="to" eType="#//ServiceCallGraphNode"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" unique="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="externalCall" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ExternalCallAction"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EdgeList" instanceClassName="java.util.Map$Entry">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" unique="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" upperBound="-1"
        eType="#//ServiceCallGraphEdge"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ServiceCallGraphNode">
    <eStructuralFeatures xsi:type="ecore:EReference" name="seff" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//seff/ResourceDemandingSEFF"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="host" eType="ecore:EClass ../../org.palladiosimulator.pcm/model/pcm.ecore#//resourceenvironment/ResourceContainer"/>
  </eClassifiers>
</ecore:EPackage>
